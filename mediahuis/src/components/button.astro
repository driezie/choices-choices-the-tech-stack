---
    const href = Astro.props.href;
    const title = Astro.props.title;
    const transparent = Astro.props.transparent;
    const showSvg = Astro.props.showSvg;
    const label = Astro.props.label;
---

<!-- Todo: Voeg nog de transparency toe want deze werkt op een andere manier dan de button -->

  <a
    {href}
    {title}
    style="color: {textColor}; background-color: {backgroundColor};"
  >
    <!-- If the variable showSvg is set to true the svg will show -->

    <span>{label}</span>
  </a>

  <style>
    a {
      display: inline-flex;
      justify-content: center;
      align-items: center;
      border-radius: 10px;
      font-size: 1.1em;
      font-weight: bold;
      border: none;
      padding: 0.5em 1.5em 0.5em 1.5em;
      cursor: pointer;
      transition: 0.1s ease;
    }

    a:hover {
      scale: 0.95;
      background-color: var(--hover);
    }

    a:hover svg {
      transform: scale(1.2);
    }

    span,
    svg {
      background-color: transparent;
    }

    svg {
      width: 1.5em;
      height: auto;
      fill: var(--light);
      margin-right: 0.5em;
      transition: transform 0.3s ease;
    }

    /* Media queries */
    /* All .transparent classes will be active when the boolean transparent is set to true */
    @media only screen and (max-width: 600px) {
      a {
        padding: 0.3em;
      }

      a.transparent {
        background-color: transparent !important;
      }

      a.transparent:hover {
        background-color: transparent;
      }

      .transparent span {
        display: none;
      }

      .transparent svg {
        margin: 0;
      }
    }

    @media only screen and (max-width: 350px) {
      a {
        padding: 0.1;
      }

      span {
        font-size: 0.5em;
      }

      svg {
        width: 1em;
        margin-right: 0.1em;
      }
    }
  </style>
